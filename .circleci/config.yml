# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing with clojure, read the docs:
# https://circleci.com/docs/2.0/language-clojure/ for more details
version: 2.1

commands:
  restore_cache_cmd:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            - vi-dependencies-
  save_cache_cmd:
    steps:
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

  build:
    steps:
      - checkout
      - restore_cache_cmd
      - run: lein deps
      - save_cache_cmd

executors:
  clojure-executor:
    docker:
      - image: circleci/clojure:lein-2.9.5

  docker-publisher:
    working_directory: ~/hailtechno # directory where steps will run
    environment:
      IMAGE_NAME: hailtechno/hailtechno
    docker:
      - image: circleci/buildpack-deps:stretch


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    executor: clojure-executor
    working_directory: ~/hailtechno
    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - build
      - run:
          name: Build Ubjar
          command: lein do clean, uberjar
      - run:
          name: Lein Tests
          command: echo "Test me"

      - persist_to_workspace:
         root: ~/hailtechno
         paths:
           - target

  docker-build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: .
      - run:
          name: Build latest Docker image
          command: docker build . -t $IMAGE_NAME:latest
      # - run:
      #     name: Build tagged Docker iamge
      #     command: docker built . -t $IMAGE_NAME:${CIRCLE_TAG}
      - run:
          name: Archive Docker Image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: ~/hailtechno
          paths:
            - ./image.tar

  docker-publish:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
            docker push $IMAGE_NAME:latest
            # docker push $IMAGE_NAME:${CIRCLE_TAG}


# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  # This is the name of the workflow, feel free to change it to better match your workflow.
  CI:
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - docker-build:
          requires:
            - build-and-test
      - docker-publish:
          requires:
            - docker-build
