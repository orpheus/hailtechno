# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing with clojure, read the docs:
# https://circleci.com/docs/2.0/language-clojure/ for more details
version: 2.1

commands:
  restore_cache_cmd:
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            - vi-dependencies-
  save_cache_cmd:
    steps:
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "prpoject.clj" }}

  build:
    steps:
      - checkout
      - restore_cache_cmd
      - run: |
          lein deps
      - save_cache_cmd

executors:
  clojure-executor:
    docker:
      - image: circleci/clojure:lein-2.9.5


# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    executor: clojure-executor
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache_cmd
      - run: |
         lein clean
         lein uberjar

  test:
  # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    executor: clojure-executor

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - build
      # - run: lein test

  # Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-test-deploy: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build
